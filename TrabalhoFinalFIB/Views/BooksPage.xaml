<?xml version="1.0" encoding="UTF-8"?>
<ContentPage
    xmlns="http://xamarin.com/schemas/2014/forms"
    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
    xmlns:local="clr-namespace:TrabalhoFinalFIB.ViewModels"
    x:Class="TrabalhoFinalFIB.Views.BooksPage"
    Title="Livros">

    <!-- Define botões na barra de navegação da tela -->
    <ContentPage.ToolbarItems>
        <!-- Adiciona botão de recarregar, com o ícone de recarregar.
            Quando clicado, executa o comando GetCommand de BooksViewModel e
            consulta os livros novamente. -->
        <ToolbarItem Command="{Binding GetCommand}" Icon="reload.png"/>
    </ContentPage.ToolbarItems>

    <!-- Define objeto no qual os elementos visuais da tela farão binding, por padrão -->
    <ContentPage.BindingContext>
        <!-- Cria uma instância de BooksViewModel que, quando invocar o evento
            RequestFailed, vai chamar o método Handle_RequestFailed da página.
            Não pode esquecer de colocar o trecho xmlns:local ali em cima. -->
        <local:BooksViewModel RequestFailed="Handle_RequestFailed" />
    </ContentPage.BindingContext>

    <ContentPage.Content>
        <StackLayout Orientation="Vertical">
            <StackLayout Orientation="Horizontal">
                <Entry x:Name="TitleEntry" Placeholder="Título do livro" HorizontalOptions="FillAndExpand" />
                <Button Text="Buscar" Command="{Binding GetCommand}" CommandParameter="{Binding Text, Source={Reference TitleEntry}}" />
            </StackLayout>

            <StackLayout Spacing="20" Padding="15">
                <!-- Define conteúdo da tela como ListView. Faz binding dos ItemSource para a 
        propriedade Books de BooksViewModel, a fim de mostrar os livros
        consultados -->
                <ListView ItemsSource="{Binding Books}"  
              HasUnevenRows="true"
              RefreshCommand="{Binding GetCommand}"
              IsPullToRefreshEnabled="true"
              IsRefreshing="{Binding IsLoading}">

                    <!-- Define o formato de cada item que for exibido na ListView -->
                    <ListView.ItemTemplate>

                        <!-- Cria instância da classe DataTemplate, porque é lá que guarda o rolê -->
                        <DataTemplate>

                            <!-- Faz com que cada linha da ListView seja uma TextCell.
                    Cada instância de TextCell exibida vai estar bindada a uma
                    instância de Book, assim, faz com que o texto da célula seja
                    o conteúdo da propriedade Title da instância de Book vinculada -->
                            <ViewCell>
                                <StackLayout Orientation="Horizontal">

                                    <Image Source="{Binding Cover}" WidthRequest="60" />

                                    <StackLayout HorizontalOptions="StartAndExpand">
                                        <Label Text="{Binding Title}" TextColor="Black" />
                                        <Label Text="{Binding Author.Name}" TextColor="Gray" />
                                    </StackLayout>

                                </StackLayout>
                            </ViewCell>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                </ListView>
            </StackLayout>

        </StackLayout>
    </ContentPage.Content>
</ContentPage>
